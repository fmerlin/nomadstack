- hosts: servers
  become: True
  tasks:
    - name: Check that the vault.key exists
      stat: path=/etc/vault.key
      register: stat_result
    - block:
      - name: add user vault
        user: name=vault group=docker
      - name: create directories
        file: path=/var/lib/vault state=directory mode=0777 owner=vault group=docker
      - name: download vault
        get_url: url="{{vault.url}}/{{vault.file}}" dest="/tmp/{{vault.file}}"
      - name: unarchive vault
        unarchive: src="/tmp/{{vault.file}}" dest=/usr/local/bin/ mode=0755 copy=no
      - name: copy systemd unit
        copy: src="../../resources/etc/systemd/system/vault.service" dest=/etc/systemd/system/vault.service mode=0755 owner=vault group=docker
      - name: create fake unseal script
        copy: content="" dest=/usr/local/bin/vault_unseal mode=700 owner=vault
      - name: copy vault json
        template: src="../../templates/etc/vault.json" dest=/etc/vault.json mode=0755 owner=vault group=docker
        become: True
        become_user: root
      - name: start vault
        systemd: name=vault state=started daemon_reload=yes enabled=yes
      - name: init vault
        uri:
          url: "http://localhost:{{vault.port}}/v1/sys/init"
          method: PUT
          body_format: json
          body:
            secret_shares: 1
            secret_threshold: 1
        register: _vault
        until: _vault.status == 200
        retries: 30
        delay: 5
      - name: save root token
        copy: content="{{_vault.json.root_token}}" dest=/etc/vault.key mode=0660 group=docker
      - name: create real unseal script
        copy: content="sleep 1 && vault operator unseal -address=http://localhost:8200 {{_vault.json.keys_base64[0]}}" dest=/usr/local/bin/vault_unseal mode=0700 owner=vault
      - name: unseal vault
        command: "sudo /usr/local/bin/vault_unseal"
      - name: Set VAULT_TOKEN
        lineinfile:
          dest: /etc/environment
          state: present
          regexp: '^VAULT_TOKEN'
          line: 'VAULT_TOKEN={{_vault.json.root_token}}'
      - name: Set VAULT_AGENT_ADDR
        lineinfile:
          dest: /etc/environment
          state: present
          regexp: '^VAULT_AGENT_ADDR'
          line: 'VAULT_AGENT_ADDR=http://localhost:8200'
      when: not stat_result.stat.exists
