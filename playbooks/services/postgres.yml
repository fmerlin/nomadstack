- hosts: localhost
  tasks:
    - name: build docker
      docker_image:
        build:
          path: /vagrant/docker/postgres
        name: "{{postgres.image}}"
        tag: "{{postgres.tag}}"
        push: yes
    - name: create volume pg_data
      docker_volume:
        name: pg_data
    - name: deploy job
      nomad_job:
        ID: postgres
        Name: postgres
        Datacenters: ["{{consul.datacenter}}"]
        Type: "service"
        TaskGroups:
        - Name: "postgres"
          Tasks:
            - Name: "postgres"
              Driver: "docker"
              Config:
                image: "{{postgres.image}}:{{postgres.tag}}"
                network_mode: "host"
                mounts:
                  - type: bind
                    target: /var/lib/postgresql/data/postgres.conf
                    source: secrets/postgres.conf
                  - type: bind
                    target: /var/lib/postgresql/data/pg_hba.conf
                    source: secrets/pg_hba.conf
                  - type: volume
                    target: /var/lib/postgresql/data/pgdata
                    source: pg_data
                logging:
                  type: "fluentd"
                  config:
                  - fluentd-address: "localhost:{{fluentbit.port}}"
                  - tag: "docker.postgres"
                  - fluentd-async-connect: "true"
              Env:
                POSTGRES_USER: "postgres"
                POSTGRES_PASSWORD: "{{ postgres.password }}"
                POSTGRES_DB: "postgres"
                PGDATA: /var/lib/postgresql/data/pgdata
              Resources:
                CPU: 500
                MemoryMB: 1024
                Networks:
                - MBits: 1
                  ReservedPorts:
                  - Label: "postgres"
                    Value: "{{postgres.port}}"
              Templates:
                - EmbeddedTmpl: "{{ lookup('file','../../resources/go-templates/postgres.conf.ctmpl') }}"
                  DestPath: "secrets/postgres.conf"
                  ChangeMode: "signal"
                  ChangeSignal: "SIGHUP"
                - EmbeddedTmpl: "{{ lookup('file','../../resources/go-templates/pg_hba.conf.ctmpl') }}"
                  DestPath: "secrets/pg_hba.conf"
                  ChangeMode: "signal"
                  ChangeSignal: "SIGHUP"
              Services:
              - Name: "postgres"
                PortLabel: "postgres"
                Tags: ["postgres"]
                Checks:
                  - Type: "script"
                    Command: "/usr/bin/pg_isready"
                    Args: ["-h", "localhost", "-U", "postgres"]
                    Interval: 10_000_000_000
                    Timeout: 2_000_000_000
            - Name: "postgres_exporter"
              Driver: "exec"
              Config:
                command: "local/{{postgres_exporter.file}}"
              Artifacts:
                - GetterSource: "{{postgres_exporter.url}}"
